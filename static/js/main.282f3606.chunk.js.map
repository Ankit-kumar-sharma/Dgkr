{"version":3,"sources":["Images/logo.png","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","App","useState","firstName","setFirstName","lastName","setLastName","universityName","setUniversityName","cityName","setCityName","zipCode","setZipCode","phone","setPhone","storageMedium","setStorageMedium","errors","setErrors","saveDataLocal","e","preventDefault","formFields","isValid","length","checkValidation","alert","className","src","require","alt","style","color","href","id","action","htmlFor","type","value","onChange","target","marginTop","flexDirection","justifyContent","alignItems","name","disabled","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.282f3606.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.66fbda94.png\";","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [universityName, setUniversityName] = useState(\"\");\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [storageMedium, setStorageMedium] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [status, setStatus] = useState(false);\r\n  function saveDataLocal(e) {\r\n    e.preventDefault();\r\n    if (\r\n      checkValidation(\r\n        firstName,\r\n        lastName,\r\n        universityName,\r\n        cityName,\r\n        zipCode,\r\n        phone,\r\n        storageMedium\r\n      )\r\n    ) {\r\n      alert(\"Successful!!!\");\r\n    }\r\n    // console.log(name);\r\n  }\r\n  function checkValidation(\r\n    firstName,\r\n    lastName,\r\n    universityName,\r\n    cityName,\r\n    zipCode,\r\n    phone,\r\n    storageMedium\r\n  ) {\r\n    let formFields = {\r\n      firstName,\r\n      lastName,\r\n      universityName,\r\n      cityName,\r\n      zipCode,\r\n      phone,\r\n      storageMedium,\r\n    };\r\n    let errors = {};\r\n    let isValid = true;\r\n    if (formFields[\"firstName\"].length === 0) {\r\n      isValid = false;\r\n      errors[\"firstName\"] = \"Firstname can't be empty.\";\r\n    } else if (formFields[\"firstName\"].length < 5) {\r\n      isValid = false;\r\n      errors[\"firstName\"] = \"Firstname should've atleast 5 char.\";\r\n    }\r\n    if (formFields[\"lastName\"].length === 0) {\r\n      isValid = false;\r\n      errors[\"lastName\"] = \"Lastname can't be empty.\";\r\n    }\r\n    if (formFields[\"universityName\"].length == 0) {\r\n      isValid = false;\r\n      errors[\"universityName\"] = \"Fill University name.\";\r\n    }\r\n    if (formFields[\"cityName\"].length == 0) {\r\n      isValid = false;\r\n      errors[\"cityName\"] = \"Fill city name.\";\r\n    }\r\n    if (formFields[\"zipCode\"].length == 0) {\r\n      isValid = false;\r\n      errors[\"zipCode\"] = \"Fill zip code.\";\r\n    }\r\n    if (formFields[\"phone\"].length == 0) {\r\n      isValid = false;\r\n      errors[\"phone\"] = \"Fill phone number.\";\r\n    }\r\n    if (formFields[\"storageMedium\"].length == 0) {\r\n      isValid = false;\r\n      errors[\"storageMedium\"] = \"Select appropriate storage medium.\";\r\n    }\r\n    setErrors(errors);\r\n    return isValid;\r\n  }\r\n  return (\r\n    <main>\r\n      <header>\r\n        <div className=\"container\">\r\n          <img\r\n            src={require(\"./Images/logo.png\")}\r\n            alt=\"logo of website\"\r\n            className=\"logo\"\r\n          />\r\n          <p className=\"logoTitle\">\r\n            Data<span style={{ color: \"#bfbfbf\" }}>Grokr</span>\r\n          </p>\r\n        </div>\r\n        <button className=\"getStartedBtn\">Get Started</button>\r\n      </header>\r\n      <section className=\"banner\">\r\n        <q className=\"Message\"> Be the best version of yourself.</q>\r\n        <a href=\"#informationContainerID\">Join Us</a>\r\n        <div className=\"mouse_scroll\">\r\n          <div className=\"mouse\">\r\n            <div className=\"wheel\"></div>\r\n          </div>\r\n          <div>\r\n            <span className=\"m_scroll_arrows unu\"></span>\r\n            <span className=\"m_scroll_arrows doi\"></span>\r\n            <span className=\"m_scroll_arrows trei\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"informationContainer\" id=\"informationContainerID\">\r\n        <div className=\"titleContainer\">\r\n          <p>Have Some Questions?</p>\r\n        </div>\r\n        <div className=\"informationBox\">\r\n          <div className=\"informationBox1\"></div>\r\n          <div className=\"informationBox2\">\r\n            <form action=\"\">\r\n              <label htmlFor=\"\">Personal Details</label>\r\n              <div className=\"elementContainer\">\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>First name</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => {\r\n                      setFirstName(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"firstName\"]}</p>\r\n                </div>\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>Last name</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={(e) => {\r\n                      setLastName(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"lastName\"]}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"elementContainer\">\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>University's Name</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={universityName}\r\n                    onChange={(e) => {\r\n                      setUniversityName(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"universityName\"]}</p>\r\n                </div>\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>City</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={cityName}\r\n                    onChange={(e) => {\r\n                      setCityName(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"cityName\"]}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <label style={{ marginTop: \"10px\" }}>Account Details</label>\r\n              <div className=\"elementContainer\">\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>Zip Code</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={zipCode}\r\n                    onChange={(e) => {\r\n                      setZipCode(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"zipCode\"]}</p>\r\n                </div>\r\n                <div className=\"element\">\r\n                  <div className=\"labelContainer\">\r\n                    <p>Phone</p>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    onChange={(e) => {\r\n                      setPhone(e.target.value);\r\n                    }}\r\n                  />\r\n                  <p className=\"error\">{errors[\"phone\"]}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"elementContainer\"\r\n                style={{\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div className=\"labelContainer\" style={{ marginTop: \"20px\" }}>\r\n                  <p>Storage Medium</p>\r\n                </div>\r\n                <div className=\"element\">\r\n                  <select\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    value={storageMedium}\r\n                    className=\"select\"\r\n                    onChange={(e) => {\r\n                      setStorageMedium(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value={\"\"} disabled>\r\n                      --Select\r\n                    </option>\r\n                    <option value=\"localhost\">Localhost</option>\r\n                    <option value=\"firebase\">Firebase</option>\r\n                  </select>\r\n                  <p className=\"error\">{errors[\"storageMedium\"]}</p>\r\n                </div>\r\n                <button className=\"submitBtn\" onClick={(e) => saveDataLocal(e)}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}